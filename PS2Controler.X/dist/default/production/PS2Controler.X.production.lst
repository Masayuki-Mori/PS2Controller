

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 11 19:38:02 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 28/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1827 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001C                     	;# 
    76     001E                     	;# 
    77     001F                     	;# 
    78     008C                     	;# 
    79     008D                     	;# 
    80     0091                     	;# 
    81     0092                     	;# 
    82     0093                     	;# 
    83     0094                     	;# 
    84     0095                     	;# 
    85     0096                     	;# 
    86     0097                     	;# 
    87     0098                     	;# 
    88     0099                     	;# 
    89     009A                     	;# 
    90     009B                     	;# 
    91     009B                     	;# 
    92     009C                     	;# 
    93     009D                     	;# 
    94     009E                     	;# 
    95     010C                     	;# 
    96     010D                     	;# 
    97     0111                     	;# 
    98     0112                     	;# 
    99     0113                     	;# 
   100     0114                     	;# 
   101     0115                     	;# 
   102     0116                     	;# 
   103     0117                     	;# 
   104     0118                     	;# 
   105     0119                     	;# 
   106     011A                     	;# 
   107     011B                     	;# 
   108     011D                     	;# 
   109     011E                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0191                     	;# 
   113     0191                     	;# 
   114     0192                     	;# 
   115     0193                     	;# 
   116     0193                     	;# 
   117     0193                     	;# 
   118     0194                     	;# 
   119     0195                     	;# 
   120     0196                     	;# 
   121     0199                     	;# 
   122     019A                     	;# 
   123     019B                     	;# 
   124     019B                     	;# 
   125     019B                     	;# 
   126     019B                     	;# 
   127     019C                     	;# 
   128     019C                     	;# 
   129     019D                     	;# 
   130     019E                     	;# 
   131     019F                     	;# 
   132     020C                     	;# 
   133     020D                     	;# 
   134     0211                     	;# 
   135     0211                     	;# 
   136     0212                     	;# 
   137     0212                     	;# 
   138     0213                     	;# 
   139     0213                     	;# 
   140     0214                     	;# 
   141     0214                     	;# 
   142     0215                     	;# 
   143     0215                     	;# 
   144     0215                     	;# 
   145     0216                     	;# 
   146     0216                     	;# 
   147     0217                     	;# 
   148     0217                     	;# 
   149     0219                     	;# 
   150     021A                     	;# 
   151     021B                     	;# 
   152     021C                     	;# 
   153     021D                     	;# 
   154     021E                     	;# 
   155     021F                     	;# 
   156     0291                     	;# 
   157     0291                     	;# 
   158     0292                     	;# 
   159     0293                     	;# 
   160     0294                     	;# 
   161     0295                     	;# 
   162     0295                     	;# 
   163     0296                     	;# 
   164     0298                     	;# 
   165     0298                     	;# 
   166     0299                     	;# 
   167     029A                     	;# 
   168     029B                     	;# 
   169     029C                     	;# 
   170     029C                     	;# 
   171     029D                     	;# 
   172     029E                     	;# 
   173     029E                     	;# 
   174     0311                     	;# 
   175     0311                     	;# 
   176     0312                     	;# 
   177     0313                     	;# 
   178     0318                     	;# 
   179     0318                     	;# 
   180     0319                     	;# 
   181     031A                     	;# 
   182     0394                     	;# 
   183     0395                     	;# 
   184     0396                     	;# 
   185     039A                     	;# 
   186     039C                     	;# 
   187     039D                     	;# 
   188     039E                     	;# 
   189     039F                     	;# 
   190     0415                     	;# 
   191     0416                     	;# 
   192     0417                     	;# 
   193     041C                     	;# 
   194     041D                     	;# 
   195     041E                     	;# 
   196     0FE4                     	;# 
   197     0FE5                     	;# 
   198     0FE6                     	;# 
   199     0FE7                     	;# 
   200     0FE8                     	;# 
   201     0FE9                     	;# 
   202     0FEA                     	;# 
   203     0FEB                     	;# 
   204     0FED                     	;# 
   205     0FEE                     	;# 
   206     0FEF                     	;# 
   207     0000                     	;# 
   208     0001                     	;# 
   209     0002                     	;# 
   210     0003                     	;# 
   211     0004                     	;# 
   212     0005                     	;# 
   213     0006                     	;# 
   214     0007                     	;# 
   215     0008                     	;# 
   216     0009                     	;# 
   217     000A                     	;# 
   218     000B                     	;# 
   219     000C                     	;# 
   220     000D                     	;# 
   221     0011                     	;# 
   222     0012                     	;# 
   223     0013                     	;# 
   224     0014                     	;# 
   225     0015                     	;# 
   226     0016                     	;# 
   227     0016                     	;# 
   228     0017                     	;# 
   229     0018                     	;# 
   230     0019                     	;# 
   231     001A                     	;# 
   232     001B                     	;# 
   233     001C                     	;# 
   234     001E                     	;# 
   235     001F                     	;# 
   236     008C                     	;# 
   237     008D                     	;# 
   238     0091                     	;# 
   239     0092                     	;# 
   240     0093                     	;# 
   241     0094                     	;# 
   242     0095                     	;# 
   243     0096                     	;# 
   244     0097                     	;# 
   245     0098                     	;# 
   246     0099                     	;# 
   247     009A                     	;# 
   248     009B                     	;# 
   249     009B                     	;# 
   250     009C                     	;# 
   251     009D                     	;# 
   252     009E                     	;# 
   253     010C                     	;# 
   254     010D                     	;# 
   255     0111                     	;# 
   256     0112                     	;# 
   257     0113                     	;# 
   258     0114                     	;# 
   259     0115                     	;# 
   260     0116                     	;# 
   261     0117                     	;# 
   262     0118                     	;# 
   263     0119                     	;# 
   264     011A                     	;# 
   265     011B                     	;# 
   266     011D                     	;# 
   267     011E                     	;# 
   268     018C                     	;# 
   269     018D                     	;# 
   270     0191                     	;# 
   271     0191                     	;# 
   272     0192                     	;# 
   273     0193                     	;# 
   274     0193                     	;# 
   275     0193                     	;# 
   276     0194                     	;# 
   277     0195                     	;# 
   278     0196                     	;# 
   279     0199                     	;# 
   280     019A                     	;# 
   281     019B                     	;# 
   282     019B                     	;# 
   283     019B                     	;# 
   284     019B                     	;# 
   285     019C                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020C                     	;# 
   291     020D                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0219                     	;# 
   308     021A                     	;# 
   309     021B                     	;# 
   310     021C                     	;# 
   311     021D                     	;# 
   312     021E                     	;# 
   313     021F                     	;# 
   314     0291                     	;# 
   315     0291                     	;# 
   316     0292                     	;# 
   317     0293                     	;# 
   318     0294                     	;# 
   319     0295                     	;# 
   320     0295                     	;# 
   321     0296                     	;# 
   322     0298                     	;# 
   323     0298                     	;# 
   324     0299                     	;# 
   325     029A                     	;# 
   326     029B                     	;# 
   327     029C                     	;# 
   328     029C                     	;# 
   329     029D                     	;# 
   330     029E                     	;# 
   331     029E                     	;# 
   332     0311                     	;# 
   333     0311                     	;# 
   334     0312                     	;# 
   335     0313                     	;# 
   336     0318                     	;# 
   337     0318                     	;# 
   338     0319                     	;# 
   339     031A                     	;# 
   340     0394                     	;# 
   341     0395                     	;# 
   342     0396                     	;# 
   343     039A                     	;# 
   344     039C                     	;# 
   345     039D                     	;# 
   346     039E                     	;# 
   347     039F                     	;# 
   348     0415                     	;# 
   349     0416                     	;# 
   350     0417                     	;# 
   351     041C                     	;# 
   352     041D                     	;# 
   353     041E                     	;# 
   354     0FE4                     	;# 
   355     0FE5                     	;# 
   356     0FE6                     	;# 
   357     0FE7                     	;# 
   358     0FE8                     	;# 
   359     0FE9                     	;# 
   360     0FEA                     	;# 
   361     0FEB                     	;# 
   362     0FED                     	;# 
   363     0FEE                     	;# 
   364     0FEF                     	;# 
   365     0018                     _T1CON	set	24
   366     0015                     _TMR0	set	21
   367     006F                     _RB7	set	111
   368     008D                     _TRISB	set	141
   369     008C                     _TRISA	set	140
   370     0099                     _OSCCON	set	153
   371     0095                     _OPTION_REG	set	149
   372     0861                     _LATA1	set	2145
   373     0863                     _LATA3	set	2147
   374     0862                     _LATA2	set	2146
   375     0868                     _LATB0	set	2152
   376     0869                     _LATB1	set	2153
   377     08F0                     _TXCKSEL	set	2288
   378     019A                     _TXREG	set	410
   379     018D                     _ANSELB	set	397
   380     018C                     _ANSELA	set	396
   381     019B                     _SPBRG	set	411
   382     0CF1                     _TRMT	set	3313
   383     0CEF                     _SPEN	set	3311
   384     0CF5                     _TXEN	set	3317
   385     0CFB                     _BRG16	set	3323
   386     0CF2                     _BRGH	set	3314
   387     0CEC                     _CREN	set	3308
   388                           
   389                           	psect	cinit
   390     07F0                     start_initialization:	
   391                           ; #config settings
   392                           
   393     07F0                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396     07F0  01F7               	clrf	__pbssCOMMON& (0+127)
   397     07F1  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   398     07F2  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   399                           
   400                           ; Clear objects allocated to BANK0
   401     07F3  0020               	movlb	0	; select bank0
   402     07F4  01A0               	clrf	__pbssBANK0& (0+127)
   403     07F5  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   404     07F6  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   405     07F7  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   406     07F8  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   407     07F9  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   408     07FA  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   409     07FB  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   410     07FC  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   411     07FD                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414     07FD                     __end_of__initialization:
   415     07FD  0020               	movlb	0
   416     07FE  3186  2EE2         	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419     0077                     __pbssCOMMON:
   420     0077                     _data:
   421     0077                     	ds	3
   422                           
   423                           	psect	bssBANK0
   424     0020                     __pbssBANK0:
   425     0020                     _ps_dat:
   426     0020                     	ds	9
   427                           
   428                           	psect	cstackCOMMON
   429     0070                     __pcstackCOMMON:
   430     0070                     ?_get_ps_con_new:
   431     0070                     ?_putch:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ??_putch:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_ps_data:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ??_ps_data:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ps_data@i:	
   447                           ; 2 bytes @ 0x0
   448                           
   449     0070                     putch@c:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 1 bytes @ 0x0
   454     0070                     	ds	1
   455     0071                     ps_data@pst:
   456                           
   457                           ; 1 bytes @ 0x1
   458     0071                     	ds	1
   459     0072                     ??_get_ps_con_new:
   460                           
   461                           ; 1 bytes @ 0x2
   462     0072                     	ds	1
   463     0073                     get_ps_con_new@x:
   464                           
   465                           ; 1 bytes @ 0x3
   466     0073                     	ds	1
   467     0074                     get_ps_con_new@i:
   468                           
   469                           ; 1 bytes @ 0x4
   470     0074                     	ds	1
   471     0075                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x5
   474     0075                     	ds	2
   475                           
   476                           	psect	maintext
   477     06E2                     __pmaintext:	
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 27 in file "DualShock2send.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  2   62[None  ] int 
   490 ;; Registers used:
   491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B1F/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   497 ;;      Params:         0       0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0
   499 ;;      Temps:          2       0       0       0       0       0
   500 ;;      Totals:         2       0       0       0       0       0
   501 ;;Total ram usage:        2 bytes
   502 ;; Hardware stack levels required when called: 2
   503 ;; This function calls:
   504 ;;		_get_ps_con_new
   505 ;;		_putch
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     06E2                     _main:	
   512                           ;psect for function _main
   513                           
   514     06E2                     l955:	
   515                           ;incstack = 0
   516                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   517                           
   518                           
   519                           ;DualShock2send.c: 28:     OPTION_REG = 0b11010100;
   520     06E2  30D4               	movlw	212
   521     06E3  0021               	movlb	1	; select bank1
   522     06E4  0095               	movwf	21	;volatile
   523     06E5                     l957:
   524                           
   525                           ;DualShock2send.c: 29:     TMR0 = 0x00;
   526     06E5  0020               	movlb	0	; select bank0
   527     06E6  0195               	clrf	21	;volatile
   528     06E7                     l959:
   529                           
   530                           ;DualShock2send.c: 30:     OSCCON = 0b11110000;
   531     06E7  30F0               	movlw	240
   532     06E8  0021               	movlb	1	; select bank1
   533     06E9  0099               	movwf	25	;volatile
   534     06EA                     l961:
   535                           
   536                           ;DualShock2send.c: 32:     TXCKSEL = 1;
   537     06EA  0022               	movlb	2	; select bank2
   538     06EB  141E               	bsf	30,0	;volatile
   539     06EC                     l963:
   540                           
   541                           ;DualShock2send.c: 33:     CREN = 1;
   542     06EC  0023               	movlb	3	; select bank3
   543     06ED  161D               	bsf	29,4	;volatile
   544     06EE                     l965:
   545                           
   546                           ;DualShock2send.c: 34:     BRGH = 1;
   547     06EE  151E               	bsf	30,2	;volatile
   548     06EF                     l967:
   549                           
   550                           ;DualShock2send.c: 35:     BRG16 = 1;
   551     06EF  159F               	bsf	31,3	;volatile
   552     06F0                     l969:
   553                           
   554                           ;DualShock2send.c: 36:     SPBRG = 208;
   555     06F0  30D0               	movlw	208
   556     06F1  009B               	movwf	27	;volatile
   557     06F2                     l971:
   558                           
   559                           ;DualShock2send.c: 37:     TXEN = 1;
   560     06F2  169E               	bsf	30,5	;volatile
   561     06F3                     l973:
   562                           
   563                           ;DualShock2send.c: 38:     SPEN = 1;
   564     06F3  179D               	bsf	29,7	;volatile
   565     06F4                     l975:
   566                           
   567                           ;DualShock2send.c: 39:  TRISA = 0b00000000;
   568     06F4  0021               	movlb	1	; select bank1
   569     06F5  018C               	clrf	12	;volatile
   570                           
   571                           ;DualShock2send.c: 40:  TRISB = 0b10000100;
   572     06F6  3084               	movlw	132
   573     06F7  008D               	movwf	13	;volatile
   574     06F8                     l977:
   575                           
   576                           ;DualShock2send.c: 41:     ANSELA = 0x00;
   577     06F8  0023               	movlb	3	; select bank3
   578     06F9  018C               	clrf	12	;volatile
   579     06FA                     l979:
   580                           
   581                           ;DualShock2send.c: 42:     ANSELB = 0x00;
   582     06FA  018D               	clrf	13	;volatile
   583                           
   584                           ;DualShock2send.c: 43:     T1CON = 0b00100001;
   585     06FB  3021               	movlw	33
   586     06FC  0020               	movlb	0	; select bank0
   587     06FD  0098               	movwf	24	;volatile
   588     06FE                     l981:
   589                           
   590                           ;DualShock2send.c: 45:     LATB1 = 1; _delay((unsigned long)((50)*(32000000/4000.0)));
   591     06FE  0022               	movlb	2	; select bank2
   592     06FF  148D               	bsf	13,1	;volatile
   593     0700  3003               	movlw	3
   594     0701  00F6               	movwf	??_main+1
   595     0702  3008               	movlw	8
   596     0703  00F5               	movwf	??_main
   597     0704  3077               	movlw	119
   598     0705                     u677:
   599     0705  0B89               	decfsz	9,f
   600     0706  2F05               	goto	u677
   601     0707  0BF5               	decfsz	??_main,f
   602     0708  2F05               	goto	u677
   603     0709  0BF6               	decfsz	??_main+1,f
   604     070A  2F05               	goto	u677
   605     070B  0000               	nop
   606     070C                     l983:
   607                           
   608                           ;DualShock2send.c: 46:     LATB1 = 0; _delay((unsigned long)((50)*(32000000/4000.0)));
   609     070C  0022               	movlb	2	; select bank2
   610     070D  108D               	bcf	13,1	;volatile
   611     070E  3003               	movlw	3
   612     070F  00F6               	movwf	??_main+1
   613     0710  3008               	movlw	8
   614     0711  00F5               	movwf	??_main
   615     0712  3077               	movlw	119
   616     0713                     u687:
   617     0713  0B89               	decfsz	9,f
   618     0714  2F13               	goto	u687
   619     0715  0BF5               	decfsz	??_main,f
   620     0716  2F13               	goto	u687
   621     0717  0BF6               	decfsz	??_main+1,f
   622     0718  2F13               	goto	u687
   623     0719  0000               	nop
   624     071A                     l985:
   625                           
   626                           ;DualShock2send.c: 47:     LATB1 = 1; _delay((unsigned long)((50)*(32000000/4000.0)));
   627     071A  0022               	movlb	2	; select bank2
   628     071B  148D               	bsf	13,1	;volatile
   629     071C  3003               	movlw	3
   630     071D  00F6               	movwf	??_main+1
   631     071E  3008               	movlw	8
   632     071F  00F5               	movwf	??_main
   633     0720  3077               	movlw	119
   634     0721                     u697:
   635     0721  0B89               	decfsz	9,f
   636     0722  2F21               	goto	u697
   637     0723  0BF5               	decfsz	??_main,f
   638     0724  2F21               	goto	u697
   639     0725  0BF6               	decfsz	??_main+1,f
   640     0726  2F21               	goto	u697
   641     0727  0000               	nop
   642     0728                     l987:
   643                           
   644                           ;DualShock2send.c: 48:     LATB1 = 0; _delay((unsigned long)((50)*(32000000/4000.0)));
   645     0728  0022               	movlb	2	; select bank2
   646     0729  108D               	bcf	13,1	;volatile
   647     072A  3003               	movlw	3
   648     072B  00F6               	movwf	??_main+1
   649     072C  3008               	movlw	8
   650     072D  00F5               	movwf	??_main
   651     072E  3077               	movlw	119
   652     072F                     u707:
   653     072F  0B89               	decfsz	9,f
   654     0730  2F2F               	goto	u707
   655     0731  0BF5               	decfsz	??_main,f
   656     0732  2F2F               	goto	u707
   657     0733  0BF6               	decfsz	??_main+1,f
   658     0734  2F2F               	goto	u707
   659     0735  0000               	nop
   660     0736                     l63:	
   661                           ;DualShock2send.c: 50:  while(1){
   662                           
   663                           
   664                           ;DualShock2send.c: 51:   _delay((unsigned long)((500)*(32000000/4000000.0)));
   665     0736  3006               	movlw	6
   666     0737  00F5               	movwf	??_main
   667     0738  3030               	movlw	48
   668     0739                     u717:
   669     0739  0B89               	decfsz	9,f
   670     073A  2F39               	goto	u717
   671     073B  0BF5               	decfsz	??_main,f
   672     073C  2F39               	goto	u717
   673     073D  3200               	nop2
   674     073E                     l989:
   675                           
   676                           ;DualShock2send.c: 52:   get_ps_con_new();
   677     073E  3186  2699  3186   	fcall	_get_ps_con_new
   678     0741                     l991:
   679                           
   680                           ;DualShock2send.c: 54:   data[0]=0;
   681     0741  01F7               	clrf	_data
   682     0742                     l993:
   683                           
   684                           ;DualShock2send.c: 55:   data[1]=0;
   685     0742  01F8               	clrf	_data+1
   686     0743                     l995:
   687                           
   688                           ;DualShock2send.c: 56:   data[2]=0;
   689     0743  01F9               	clrf	_data+2
   690     0744                     l997:
   691                           
   692                           ;DualShock2send.c: 58:   if(ps_dat[3] & 0x10) {data[0] |= 0b10000000;}
   693     0744  0020               	movlb	0	; select bank0
   694     0745  1E23               	btfss	_ps_dat+3,4
   695     0746  2F48               	goto	u421
   696     0747  2F49               	goto	u420
   697     0748                     u421:
   698     0748  2F4A               	goto	l64
   699     0749                     u420:
   700     0749                     l999:
   701     0749  17F7               	bsf	_data,7
   702     074A                     l64:
   703                           
   704                           ;DualShock2send.c: 59:   if(ps_dat[3] & 0x40) {data[0] |= 0b01000000;}
   705     074A  1F23               	btfss	_ps_dat+3,6
   706     074B  2F4D               	goto	u431
   707     074C  2F4E               	goto	u430
   708     074D                     u431:
   709     074D  2F4F               	goto	l65
   710     074E                     u430:
   711     074E                     l1001:
   712     074E  1777               	bsf	_data,6
   713     074F                     l65:
   714                           
   715                           ;DualShock2send.c: 60:   if(ps_dat[3] & 0x80) {data[0] |= 0b00100000;}
   716     074F  1FA3               	btfss	_ps_dat+3,7
   717     0750  2F52               	goto	u441
   718     0751  2F53               	goto	u440
   719     0752                     u441:
   720     0752  2F54               	goto	l66
   721     0753                     u440:
   722     0753                     l1003:
   723     0753  16F7               	bsf	_data,5
   724     0754                     l66:
   725                           
   726                           ;DualShock2send.c: 61:   if(ps_dat[3] & 0x20) {data[0] |= 0b00010000;}
   727     0754  1EA3               	btfss	_ps_dat+3,5
   728     0755  2F57               	goto	u451
   729     0756  2F58               	goto	u450
   730     0757                     u451:
   731     0757  2F59               	goto	l67
   732     0758                     u450:
   733     0758                     l1005:
   734     0758  1677               	bsf	_data,4
   735     0759                     l67:
   736                           
   737                           ;DualShock2send.c: 62:   if(ps_dat[4] & 0x10) {data[0] |= 0b00001000;}
   738     0759  1E24               	btfss	_ps_dat+4,4
   739     075A  2F5C               	goto	u461
   740     075B  2F5D               	goto	u460
   741     075C                     u461:
   742     075C  2F5E               	goto	l68
   743     075D                     u460:
   744     075D                     l1007:
   745     075D  15F7               	bsf	_data,3
   746     075E                     l68:
   747                           
   748                           ;DualShock2send.c: 63:   if(ps_dat[4] & 0x40) {data[0] |= 0b00000100;}
   749     075E  1F24               	btfss	_ps_dat+4,6
   750     075F  2F61               	goto	u471
   751     0760  2F62               	goto	u470
   752     0761                     u471:
   753     0761  2F63               	goto	l69
   754     0762                     u470:
   755     0762                     l1009:
   756     0762  1577               	bsf	_data,2
   757     0763                     l69:
   758                           
   759                           ;DualShock2send.c: 64:   if(ps_dat[4] & 0x80) {data[0] |= 0b00000010;}
   760     0763  1FA4               	btfss	_ps_dat+4,7
   761     0764  2F66               	goto	u481
   762     0765  2F67               	goto	u480
   763     0766                     u481:
   764     0766  2F68               	goto	l70
   765     0767                     u480:
   766     0767                     l1011:
   767     0767  14F7               	bsf	_data,1
   768     0768                     l70:
   769                           
   770                           ;DualShock2send.c: 65:   if(ps_dat[4] & 0x20) {data[0] |= 0b00000001;}
   771     0768  1EA4               	btfss	_ps_dat+4,5
   772     0769  2F6B               	goto	u491
   773     076A  2F6C               	goto	u490
   774     076B                     u491:
   775     076B  2F6D               	goto	l71
   776     076C                     u490:
   777     076C                     l1013:
   778     076C  1477               	bsf	_data,0
   779     076D                     l71:
   780                           
   781                           ;DualShock2send.c: 67:   if(ps_dat[4] & 0x04) {data[1] |= 0b10000000;}
   782     076D  1D24               	btfss	_ps_dat+4,2
   783     076E  2F70               	goto	u501
   784     076F  2F71               	goto	u500
   785     0770                     u501:
   786     0770  2F72               	goto	l72
   787     0771                     u500:
   788     0771                     l1015:
   789     0771  17F8               	bsf	_data+1,7
   790     0772                     l72:
   791                           
   792                           ;DualShock2send.c: 68:   if(ps_dat[4] & 0x01) {data[1] |= 0b01000000;}
   793     0772  1C24               	btfss	_ps_dat+4,0
   794     0773  2F75               	goto	u511
   795     0774  2F76               	goto	u510
   796     0775                     u511:
   797     0775  2F77               	goto	l73
   798     0776                     u510:
   799     0776                     l1017:
   800     0776  1778               	bsf	_data+1,6
   801     0777                     l73:
   802                           
   803                           ;DualShock2send.c: 69:   if(ps_dat[4] & 0x08) {data[1] |= 0b00100000;}
   804     0777  1DA4               	btfss	_ps_dat+4,3
   805     0778  2F7A               	goto	u521
   806     0779  2F7B               	goto	u520
   807     077A                     u521:
   808     077A  2F7C               	goto	l74
   809     077B                     u520:
   810     077B                     l1019:
   811     077B  16F8               	bsf	_data+1,5
   812     077C                     l74:
   813                           
   814                           ;DualShock2send.c: 70:   if(ps_dat[4] & 0x02) {data[1] |= 0b00010000;}
   815     077C  1CA4               	btfss	_ps_dat+4,1
   816     077D  2F7F               	goto	u531
   817     077E  2F80               	goto	u530
   818     077F                     u531:
   819     077F  2F81               	goto	l75
   820     0780                     u530:
   821     0780                     l1021:
   822     0780  1678               	bsf	_data+1,4
   823     0781                     l75:
   824                           
   825                           ;DualShock2send.c: 71:   if(ps_dat[3] & 0x01) {data[1] |= 0b00001000;}
   826     0781  1C23               	btfss	_ps_dat+3,0
   827     0782  2F84               	goto	u541
   828     0783  2F85               	goto	u540
   829     0784                     u541:
   830     0784  2F86               	goto	l76
   831     0785                     u540:
   832     0785                     l1023:
   833     0785  15F8               	bsf	_data+1,3
   834     0786                     l76:
   835                           
   836                           ;DualShock2send.c: 72:   if(ps_dat[3] & 0x08) {data[1] |= 0b00000100;}
   837     0786  1DA3               	btfss	_ps_dat+3,3
   838     0787  2F89               	goto	u551
   839     0788  2F8A               	goto	u550
   840     0789                     u551:
   841     0789  2F8B               	goto	l77
   842     078A                     u550:
   843     078A                     l1025:
   844     078A  1578               	bsf	_data+1,2
   845     078B                     l77:
   846                           
   847                           ;DualShock2send.c: 73:   if(ps_dat[3] & 0x02) {data[1] |= 0b00000010;}
   848     078B  1CA3               	btfss	_ps_dat+3,1
   849     078C  2F8E               	goto	u561
   850     078D  2F8F               	goto	u560
   851     078E                     u561:
   852     078E  2F90               	goto	l78
   853     078F                     u560:
   854     078F                     l1027:
   855     078F  14F8               	bsf	_data+1,1
   856     0790                     l78:
   857                           
   858                           ;DualShock2send.c: 74:   if(ps_dat[3] & 0x04) {data[1] |= 0b00000001;}
   859     0790  1D23               	btfss	_ps_dat+3,2
   860     0791  2F93               	goto	u571
   861     0792  2F94               	goto	u570
   862     0793                     u571:
   863     0793  2F95               	goto	l1031
   864     0794                     u570:
   865     0794                     l1029:
   866     0794  1478               	bsf	_data+1,0
   867     0795                     l1031:
   868                           
   869                           ;DualShock2send.c: 76:   if(ps_dat[8]<=78) {data[2] |= 0b10000000;}
   870     0795  304F               	movlw	79
   871     0796  0228               	subwf	_ps_dat+8,w
   872     0797  1803               	skipnc
   873     0798  2F9A               	goto	u581
   874     0799  2F9B               	goto	u580
   875     079A                     u581:
   876     079A  2F9C               	goto	l1035
   877     079B                     u580:
   878     079B                     l1033:
   879     079B  17F9               	bsf	_data+2,7
   880     079C                     l1035:
   881                           
   882                           ;DualShock2send.c: 77:   if(ps_dat[8]>=185) {data[2] |= 0b01000000;}
   883     079C  30B9               	movlw	185
   884     079D  0228               	subwf	_ps_dat+8,w
   885     079E  1C03               	skipc
   886     079F  2FA1               	goto	u591
   887     07A0  2FA2               	goto	u590
   888     07A1                     u591:
   889     07A1  2FA3               	goto	l1039
   890     07A2                     u590:
   891     07A2                     l1037:
   892     07A2  1779               	bsf	_data+2,6
   893     07A3                     l1039:
   894                           
   895                           ;DualShock2send.c: 78:   if(ps_dat[7]<=78) {data[2] |= 0b00100000;}
   896     07A3  304F               	movlw	79
   897     07A4  0227               	subwf	_ps_dat+7,w
   898     07A5  1803               	skipnc
   899     07A6  2FA8               	goto	u601
   900     07A7  2FA9               	goto	u600
   901     07A8                     u601:
   902     07A8  2FAA               	goto	l1043
   903     07A9                     u600:
   904     07A9                     l1041:
   905     07A9  16F9               	bsf	_data+2,5
   906     07AA                     l1043:
   907                           
   908                           ;DualShock2send.c: 79:   if(ps_dat[7]>=185) {data[2] |= 0b00010000;}
   909     07AA  30B9               	movlw	185
   910     07AB  0227               	subwf	_ps_dat+7,w
   911     07AC  1C03               	skipc
   912     07AD  2FAF               	goto	u611
   913     07AE  2FB0               	goto	u610
   914     07AF                     u611:
   915     07AF  2FB1               	goto	l1047
   916     07B0                     u610:
   917     07B0                     l1045:
   918     07B0  1679               	bsf	_data+2,4
   919     07B1                     l1047:
   920                           
   921                           ;DualShock2send.c: 80:   if(ps_dat[6]<=78) {data[2] |= 0b00001000;}
   922     07B1  304F               	movlw	79
   923     07B2  0226               	subwf	_ps_dat+6,w
   924     07B3  1803               	skipnc
   925     07B4  2FB6               	goto	u621
   926     07B5  2FB7               	goto	u620
   927     07B6                     u621:
   928     07B6  2FB8               	goto	l1051
   929     07B7                     u620:
   930     07B7                     l1049:
   931     07B7  15F9               	bsf	_data+2,3
   932     07B8                     l1051:
   933                           
   934                           ;DualShock2send.c: 81:   if(ps_dat[6]>=185) {data[2] |= 0b00000100;}
   935     07B8  30B9               	movlw	185
   936     07B9  0226               	subwf	_ps_dat+6,w
   937     07BA  1C03               	skipc
   938     07BB  2FBD               	goto	u631
   939     07BC  2FBE               	goto	u630
   940     07BD                     u631:
   941     07BD  2FBF               	goto	l1055
   942     07BE                     u630:
   943     07BE                     l1053:
   944     07BE  1579               	bsf	_data+2,2
   945     07BF                     l1055:
   946                           
   947                           ;DualShock2send.c: 82:   if(ps_dat[5]<=78) {data[2] |= 0b00000010;}
   948     07BF  304F               	movlw	79
   949     07C0  0225               	subwf	_ps_dat+5,w
   950     07C1  1803               	skipnc
   951     07C2  2FC4               	goto	u641
   952     07C3  2FC5               	goto	u640
   953     07C4                     u641:
   954     07C4  2FC6               	goto	l1059
   955     07C5                     u640:
   956     07C5                     l1057:
   957     07C5  14F9               	bsf	_data+2,1
   958     07C6                     l1059:
   959                           
   960                           ;DualShock2send.c: 83:   if(ps_dat[5]>=185) {data[2] |= 0b00000001;}
   961     07C6  30B9               	movlw	185
   962     07C7  0225               	subwf	_ps_dat+5,w
   963     07C8  1C03               	skipc
   964     07C9  2FCB               	goto	u651
   965     07CA  2FCC               	goto	u650
   966     07CB                     u651:
   967     07CB  2FCD               	goto	l1063
   968     07CC                     u650:
   969     07CC                     l1061:
   970     07CC  1479               	bsf	_data+2,0
   971     07CD                     l1063:
   972                           
   973                           ;DualShock2send.c: 85:         if((data[0] | data[1] | data[2]) == 0){
   974     07CD  0878               	movf	_data+1,w
   975     07CE  0479               	iorwf	_data+2,w
   976     07CF  0477               	iorwf	_data,w
   977     07D0  1D03               	btfss	3,2
   978     07D1  2FD3               	goto	u661
   979     07D2  2FD4               	goto	u660
   980     07D3                     u661:
   981     07D3  2FD7               	goto	l88
   982     07D4                     u660:
   983     07D4                     l1065:
   984                           
   985                           ;DualShock2send.c: 86:             LATB0 = 1;
   986     07D4  0022               	movlb	2	; select bank2
   987     07D5  140D               	bsf	13,0	;volatile
   988                           
   989                           ;DualShock2send.c: 87:         }
   990     07D6  2F36               	goto	l63
   991     07D7                     l88:	
   992                           ;DualShock2send.c: 88:         else{
   993                           
   994                           
   995                           ;DualShock2send.c: 89:             LATB0 = 0;
   996     07D7  0022               	movlb	2	; select bank2
   997     07D8  100D               	bcf	13,0	;volatile
   998     07D9                     l1067:
   999                           
  1000                           ;DualShock2send.c: 90:             putch(0x99);
  1001     07D9  3099               	movlw	153
  1002     07DA  3186  266A  3186   	fcall	_putch
  1003                           
  1004                           ;DualShock2send.c: 91:             putch(data[0]);
  1005     07DD  0877               	movf	_data,w
  1006     07DE  3186  266A  3186   	fcall	_putch
  1007                           
  1008                           ;DualShock2send.c: 92:             putch(data[1]);
  1009     07E1  0878               	movf	_data+1,w
  1010     07E2  3186  266A  3186   	fcall	_putch
  1011                           
  1012                           ;DualShock2send.c: 93:             putch(data[2]);
  1013     07E5  0879               	movf	_data+2,w
  1014     07E6  3186  266A  3186   	fcall	_putch
  1015                           
  1016                           ;DualShock2send.c: 94:             putch(0x4f);
  1017     07E9  304F               	movlw	79
  1018     07EA  3186  266A  3186   	fcall	_putch
  1019     07ED  2F36               	goto	l63
  1020     07EE  3180  2802         	ljmp	start
  1021     07F0                     __end_of_main:
  1022                           
  1023                           	psect	text1
  1024     066A                     __ptext1:	
  1025 ;; *************** function _putch *****************
  1026 ;; Defined at:
  1027 ;;		line 135 in file "DualShock2send.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  c               1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  c               1    0[COMMON] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1041 ;;      Params:         0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0
  1044 ;;      Totals:         1       0       0       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054     066A                     _putch:	
  1055                           ;psect for function _putch
  1056                           
  1057                           
  1058                           ;incstack = 0
  1059                           ; Regs used in _putch: [wreg]
  1060                           ;putch@c stored from wreg
  1061     066A  00F0               	movwf	putch@c
  1062     066B                     l951:
  1063     066B                     l110:	
  1064                           ;DualShock2send.c: 136:     while(!TRMT);
  1065                           
  1066     066B  0023               	movlb	3	; select bank3
  1067     066C  1C9E               	btfss	30,1	;volatile
  1068     066D  2E6F               	goto	u411
  1069     066E  2E70               	goto	u410
  1070     066F                     u411:
  1071     066F  2E6B               	goto	l110
  1072     0670                     u410:
  1073     0670                     l953:
  1074                           
  1075                           ;DualShock2send.c: 137:     TXREG = c;
  1076     0670  0870               	movf	putch@c,w
  1077     0671  009A               	movwf	26	;volatile
  1078     0672                     l113:
  1079     0672  0008               	return
  1080     0673                     __end_of_putch:
  1081                           
  1082                           	psect	text2
  1083     0699                     __ptext2:	
  1084 ;; *************** function _get_ps_con_new *****************
  1085 ;; Defined at:
  1086 ;;		line 102 in file "DualShock2send.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  i               1    4[COMMON] unsigned char 
  1091 ;;  x               1    3[COMMON] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1101 ;;      Params:         0       0       0       0       0       0
  1102 ;;      Locals:         2       0       0       0       0       0
  1103 ;;      Temps:          1       0       0       0       0       0
  1104 ;;      Totals:         3       0       0       0       0       0
  1105 ;;Total ram usage:        3 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 1
  1108 ;; This function calls:
  1109 ;;		_ps_data
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115     0699                     _get_ps_con_new:	
  1116                           ;psect for function _get_ps_con_new
  1117                           
  1118     0699                     l923:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _get_ps_con_new: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1121                           
  1122                           
  1123                           ;DualShock2send.c: 103:  uint8_t i,x;;DualShock2send.c: 105:  LATA2 = 0;
  1124     0699  0022               	movlb	2	; select bank2
  1125     069A  110C               	bcf	12,2	;volatile
  1126     069B                     l925:
  1127                           
  1128                           ;DualShock2send.c: 106:  ps_dat[0]=ps_data(0x01);
  1129     069B  3001               	movlw	1
  1130     069C  3186  2673  3186   	fcall	_ps_data
  1131     069F  0020               	movlb	0	; select bank0
  1132     06A0  00A0               	movwf	_ps_dat
  1133                           
  1134                           ;DualShock2send.c: 107:  ps_dat[1]=ps_data(0x42);
  1135     06A1  3042               	movlw	66
  1136     06A2  3186  2673  3186   	fcall	_ps_data
  1137     06A5  0020               	movlb	0	; select bank0
  1138     06A6  00A1               	movwf	_ps_dat+1
  1139     06A7                     l927:
  1140                           
  1141                           ;DualShock2send.c: 108:  x=((ps_dat[1] & 0x03) * 2) + 3;
  1142     06A7  0821               	movf	_ps_dat+1,w
  1143     06A8  3903               	andlw	3
  1144     06A9  0709               	addwf	9,w
  1145     06AA  3E03               	addlw	3
  1146     06AB  00F3               	movwf	get_ps_con_new@x
  1147     06AC                     l929:
  1148                           
  1149                           ;DualShock2send.c: 109:         for(i=2;i<x;i++) {ps_dat[i] = ps_data(0x00);}
  1150     06AC  3002               	movlw	2
  1151     06AD  00F4               	movwf	get_ps_con_new@i
  1152     06AE  2EBC               	goto	l935
  1153     06AF                     l931:
  1154     06AF  0874               	movf	get_ps_con_new@i,w
  1155     06B0  3E20               	addlw	(low (_ps_dat| 0))& (0+255)
  1156     06B1  0086               	movwf	6
  1157     06B2  0187               	clrf	7
  1158     06B3  3000               	movlw	0
  1159     06B4  3186  2673  3186   	fcall	_ps_data
  1160     06B7  0081               	movwf	1
  1161     06B8                     l933:
  1162     06B8  3001               	movlw	1
  1163     06B9  00F2               	movwf	??_get_ps_con_new
  1164     06BA  0872               	movf	??_get_ps_con_new,w
  1165     06BB  07F4               	addwf	get_ps_con_new@i,f
  1166     06BC                     l935:
  1167     06BC  0873               	movf	get_ps_con_new@x,w
  1168     06BD  0274               	subwf	get_ps_con_new@i,w
  1169     06BE  1C03               	skipc
  1170     06BF  2EC1               	goto	u381
  1171     06C0  2EC2               	goto	u380
  1172     06C1                     u381:
  1173     06C1  2EAF               	goto	l931
  1174     06C2                     u380:
  1175     06C2                     l97:
  1176                           
  1177                           ;DualShock2send.c: 110:  LATA2 = 1;
  1178     06C2  0022               	movlb	2	; select bank2
  1179     06C3  150C               	bsf	12,2	;volatile
  1180     06C4                     l937:
  1181                           
  1182                           ;DualShock2send.c: 111:  if(i==5){
  1183     06C4  3005               	movlw	5
  1184     06C5  0674               	xorwf	get_ps_con_new@i,w
  1185     06C6  1D03               	btfss	3,2
  1186     06C7  2EC9               	goto	u391
  1187     06C8  2ECA               	goto	u390
  1188     06C9                     u391:
  1189     06C9  2EDC               	goto	l949
  1190     06CA                     u390:
  1191     06CA                     l939:
  1192                           
  1193                           ;DualShock2send.c: 112:   for(i=5;i<9;i++) {ps_dat[i] = 0x7f;}
  1194     06CA  3005               	movlw	5
  1195     06CB  00F4               	movwf	get_ps_con_new@i
  1196     06CC                     l943:
  1197     06CC  0874               	movf	get_ps_con_new@i,w
  1198     06CD  3E20               	addlw	(low (_ps_dat| 0))& (0+255)
  1199     06CE  0086               	movwf	6
  1200     06CF  0187               	clrf	7
  1201     06D0  307F               	movlw	127
  1202     06D1  0081               	movwf	1
  1203     06D2                     l945:
  1204     06D2  3001               	movlw	1
  1205     06D3  00F2               	movwf	??_get_ps_con_new
  1206     06D4  0872               	movf	??_get_ps_con_new,w
  1207     06D5  07F4               	addwf	get_ps_con_new@i,f
  1208     06D6                     l947:
  1209     06D6  3009               	movlw	9
  1210     06D7  0274               	subwf	get_ps_con_new@i,w
  1211     06D8  1C03               	skipc
  1212     06D9  2EDB               	goto	u401
  1213     06DA  2EDC               	goto	u400
  1214     06DB                     u401:
  1215     06DB  2ECC               	goto	l943
  1216     06DC                     u400:
  1217     06DC                     l949:
  1218                           
  1219                           ;DualShock2send.c: 114:  ps_dat[3] = ~ps_dat[3];
  1220     06DC  0020               	movlb	0	; select bank0
  1221     06DD  0923               	comf	_ps_dat+3,w
  1222     06DE  00A3               	movwf	_ps_dat+3
  1223                           
  1224                           ;DualShock2send.c: 115:  ps_dat[4] = ~ps_dat[4];
  1225     06DF  0924               	comf	_ps_dat+4,w
  1226     06E0  00A4               	movwf	_ps_dat+4
  1227     06E1                     l101:
  1228     06E1  0008               	return
  1229     06E2                     __end_of_get_ps_con_new:
  1230                           
  1231                           	psect	text3
  1232     0673                     __ptext3:	
  1233 ;; *************** function _ps_data *****************
  1234 ;; Defined at:
  1235 ;;		line 122 in file "DualShock2send.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  pst             1    wreg     unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  pst             1    1[COMMON] unsigned char 
  1240 ;;  i               1    0[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      unsigned char 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1250 ;;      Params:         0       0       0       0       0       0
  1251 ;;      Locals:         2       0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0       0
  1253 ;;      Totals:         2       0       0       0       0       0
  1254 ;;Total ram usage:        2 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_get_ps_con_new
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     0673                     _ps_data:	
  1264                           ;psect for function _ps_data
  1265                           
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _ps_data: [wreg+status,2+status,0]
  1269                           ;ps_data@pst stored from wreg
  1270     0673  00F1               	movwf	ps_data@pst
  1271     0674                     l895:
  1272                           
  1273                           ;DualShock2send.c: 123:  uint8_t i;;DualShock2send.c: 125:  for(i=8;i>0;i--){
  1274     0674  3008               	movlw	8
  1275     0675  00F0               	movwf	ps_data@i
  1276     0676                     l901:
  1277                           
  1278                           ;DualShock2send.c: 126:   _delay((unsigned long)((15)*(32000000/4000000.0)));LATA3 = 0;
  1279     0676  3028               	movlw	40
  1280     0677                     u727:
  1281     0677  0B89               	decfsz	9,f
  1282     0678  2E77               	goto	u727
  1283     0679                     l903:
  1284     0679  0022               	movlb	2	; select bank2
  1285     067A  118C               	bcf	12,3	;volatile
  1286     067B                     l905:
  1287                           
  1288                           ;DualShock2send.c: 127:         LATA1 = pst & 0x01;
  1289     067B  1871               	btfsc	ps_data@pst,0
  1290     067C  2E7E               	goto	u341
  1291     067D  2E81               	goto	u340
  1292     067E                     u341:
  1293     067E  0022               	movlb	2	; select bank2
  1294     067F  148C               	bsf	12,1	;volatile
  1295     0680  2E83               	goto	u354
  1296     0681                     u340:
  1297     0681  0022               	movlb	2	; select bank2
  1298     0682  108C               	bcf	12,1	;volatile
  1299     0683                     u354:
  1300     0683                     l907:
  1301                           
  1302                           ;DualShock2send.c: 128:         pst = pst >> 1;
  1303     0683  3671               	lsrf	ps_data@pst,w
  1304     0684  00F1               	movwf	ps_data@pst
  1305     0685                     l909:
  1306                           
  1307                           ;DualShock2send.c: 129:         _delay((unsigned long)((15)*(32000000/4000000.0))); LATA
      +                          3 = 1;
  1308     0685  3028               	movlw	40
  1309     0686                     u737:
  1310     0686  0B89               	decfsz	9,f
  1311     0687  2E86               	goto	u737
  1312     0688                     l911:
  1313     0688  0022               	movlb	2	; select bank2
  1314     0689  158C               	bsf	12,3	;volatile
  1315     068A                     l913:
  1316                           
  1317                           ;DualShock2send.c: 130:   if(RB7) {pst |= 0x80;}
  1318     068A  0020               	movlb	0	; select bank0
  1319     068B  1F8D               	btfss	13,7	;volatile
  1320     068C  2E8E               	goto	u361
  1321     068D  2E8F               	goto	u360
  1322     068E                     u361:
  1323     068E  2E90               	goto	l917
  1324     068F                     u360:
  1325     068F                     l915:
  1326     068F  17F1               	bsf	ps_data@pst,7
  1327     0690                     l917:
  1328                           
  1329                           ;DualShock2send.c: 131:     }
  1330     0690  3001               	movlw	1
  1331     0691  02F0               	subwf	ps_data@i,f
  1332     0692  0870               	movf	ps_data@i,w
  1333     0693  1D03               	btfss	3,2
  1334     0694  2E96               	goto	u371
  1335     0695  2E97               	goto	u370
  1336     0696                     u371:
  1337     0696  2E76               	goto	l901
  1338     0697                     u370:
  1339     0697                     l919:
  1340                           
  1341                           ;DualShock2send.c: 132:  return (pst);
  1342     0697  0871               	movf	ps_data@pst,w
  1343     0698                     l107:
  1344     0698  0008               	return
  1345     0699                     __end_of_ps_data:
  1346     007E                     btemp	set	126	;btemp
  1347     007E                     wtemp0	set	126
  1348                           
  1349                           	psect	config
  1350                           
  1351                           ;Config register CONFIG1 @ 0x8007
  1352                           ;	Oscillator Selection
  1353                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1354                           ;	Watchdog Timer Enable
  1355                           ;	WDTE = OFF, WDT disabled
  1356                           ;	Power-up Timer Enable
  1357                           ;	PWRTE = ON, PWRT enabled
  1358                           ;	MCLR Pin Function Select
  1359                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1360                           ;	Flash Program Memory Code Protection
  1361                           ;	CP = OFF, Program memory code protection is disabled
  1362                           ;	Data Memory Code Protection
  1363                           ;	CPD = OFF, Data memory code protection is disabled
  1364                           ;	Brown-out Reset Enable
  1365                           ;	BOREN = ON, Brown-out Reset enabled
  1366                           ;	Clock Out Enable
  1367                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1368                           ;	Internal/External Switchover
  1369                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1370                           ;	Fail-Safe Clock Monitor Enable
  1371                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1372     8007                     	org	32775
  1373     8007  3F84               	dw	16260
  1374                           
  1375                           ;Config register CONFIG2 @ 0x8008
  1376                           ;	Flash Memory Self-Write Protection
  1377                           ;	WRT = OFF, Write protection off
  1378                           ;	PLL Enable
  1379                           ;	PLLEN = ON, 4x PLL enabled
  1380                           ;	Stack Overflow/Underflow Reset Enable
  1381                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1382                           ;	Brown-out Reset Voltage Selection
  1383                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  1384                           ;	In-Circuit Debugger Mode
  1385                           ;	DEBUG = 0x1, unprogrammed default
  1386                           ;	Low-Voltage Programming Enable
  1387                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1388     8008                     	org	32776
  1389     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_get_ps_con_new
    _get_ps_con_new->_ps_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     295
                                              5 COMMON     2     2      0
                     _get_ps_con_new
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_ps_con_new                                       3     3      0     273
                                              2 COMMON     3     3      0
                            _ps_data
 ---------------------------------------------------------------------------------
 (2) _ps_data                                              2     2      0     114
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_ps_con_new
     _ps_data
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       9       6       11.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      13      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 11 19:38:02 2023

                     l70 0768                       l71 076D                       l63 0736  
                     l72 0772                       l64 074A                       l73 0777  
                     l65 074F                       l74 077C                       l66 0754  
                     l75 0781                       l67 0759                       l76 0786  
                     l68 075E                       l77 078B                       l69 0763  
                     l78 0790                       l88 07D7                       l97 06C2  
                    l101 06E1                      l110 066B                      l113 0672  
                    l107 0698                      l901 0676                      l911 0688  
                    l903 0679                      l913 068A                      l905 067B  
                    l915 068F                      l907 0683                      l931 06AF  
                    l923 0699                      l917 0690                      l909 0685  
                    l933 06B8                      l925 069B                      l919 0697  
                    l943 06CC                      l935 06BC                      l927 06A7  
                    l951 066B                      l945 06D2                      l937 06C4  
                    l929 06AC                      l953 0670                      l961 06EA  
                    l947 06D6                      l939 06CA                      l971 06F2  
                    l963 06EC                      l955 06E2                      l949 06DC  
                    l981 06FE                      l973 06F3                      l965 06EE  
                    l957 06E5                      l895 0674                      l991 0741  
                    l983 070C                      l975 06F4                      l967 06EF  
                    l959 06E7                      l993 0742                      l985 071A  
                    l977 06F8                      l969 06F0                      l995 0743  
                    l987 0728                      l979 06FA                      l997 0744  
                    l989 073E                      l999 0749                      _RB7 006F  
                    u400 06DC                      u401 06DB                      u410 0670  
                    u411 066F                      u340 0681                      u500 0771  
                    u420 0749                      u341 067E                      u501 0770  
                    u421 0748                      u510 0776                      u430 074E  
                    u511 0775                      u431 074D                      u360 068F  
                    u600 07A9                      u520 077B                      u440 0753  
                    u361 068E                      u601 07A8                      u521 077A  
                    u441 0752                      u370 0697                      u354 0683  
                    u610 07B0                      u530 0780                      u450 0758  
                    u371 0696                      u611 07AF                      u531 077F  
                    u451 0757                      u380 06C2                      u620 07B7  
                    u540 0785                      u460 075D                      u381 06C1  
                    u621 07B6                      u541 0784                      u461 075C  
                    u390 06CA                      u630 07BE                      u550 078A  
                    u470 0762                      u391 06C9                      u631 07BD  
                    u551 0789                      u471 0761                      u640 07C5  
                    u560 078F                      u480 0767                      u641 07C4  
                    u561 078E                      u481 0766                      u650 07CC  
                    u570 0794                      u490 076C                      u651 07CB  
                    u571 0793                      u491 076B                      u707 072F  
                    u660 07D4                      u580 079B                      u661 07D3  
                    u581 079A                      u717 0739                      u590 07A2  
                    u727 0677                      u591 07A1                      u737 0686  
                    u677 0705                      u687 0713                      u697 0721  
                    wreg 0009          ?_get_ps_con_new 0070                     l1001 074E  
                   l1011 0767                     l1003 0753                     l1021 0780  
                   l1013 076C                     l1005 0758                     l1031 0795  
                   l1023 0785                     l1015 0771                     l1007 075D  
                   l1041 07A9                     l1033 079B                     l1025 078A  
                   l1017 0776                     l1009 0762                     l1051 07B8  
                   l1043 07AA                     l1035 079C                     l1027 078F  
                   l1019 077B                     l1061 07CC                     l1053 07BE  
                   l1045 07B0                     l1037 07A2                     l1029 0794  
                   l1063 07CD                     l1055 07BF                     l1047 07B1  
                   l1039 07A3                     l1065 07D4                     l1057 07C5  
                   l1049 07B7                     l1067 07D9                     l1059 07C6  
                   _BRGH 0CF2                     _CREN 0CEC                     _TMR0 0015  
                   _SPEN 0CEF                     _TRMT 0CF1                     _TXEN 0CF5  
                   _data 0077                     _main 06E2                     fsr1h 0007  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_main 0070                    _BRG16 0CFB  
                  _T1CON 0018                    _LATA1 0861                    _LATB0 0868  
                  _LATA2 0862                    _LATB1 0869                    _LATA3 0863  
                  _SPBRG 019B                    _TRISA 008C                    _TRISB 008D  
                  _TXREG 019A                    _putch 066A          __end_of_ps_data 0699  
                  status 0003                    wtemp0 007E          __initialization 07F0  
           __end_of_main 07F0                   ??_main 0075                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELB 018D                   _OSCCON 0099  
                 _ps_dat 0020                ??_ps_data 0070                   putch@c 0070  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_putch 0673  
       ??_get_ps_con_new 0072                  ??_putch 0070               __pbssBANK0 0020  
             __pmaintext 06E2                  _TXCKSEL 08F0                  __ptext1 066A  
                __ptext2 0699                  __ptext3 0673                  _ps_data 0673  
   end_of_initialization 07FD      start_initialization 07F0              __pbssCOMMON 0077  
              ___latbits 0001               ps_data@pst 0071                 ?_ps_data 0070  
        get_ps_con_new@i 0074          get_ps_con_new@x 0073           _get_ps_con_new 0699  
               ps_data@i 0070               _OPTION_REG 0095   __end_of_get_ps_con_new 06E2  
